# Kubernetes Deployment Manifest for Laravel Application

# Create namespace
apiVersion: v1
kind: Namespace
metadata:
  name: ns

---
# ConfigMap for Laravel environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ns
  name: laravel-config
data:
  APP_NAME: "Ramadan | Md. Al Imran Suvro"
  APP_ENV: "production"
  APP_KEY: "base64:KVZTg3TzEbA6Y7GTkLp1ILiz5p/AmESM0kFIhJpDhY8="
  APP_DEBUG: "false"
  APP_URL: "http://my-app.local"
  APP_LOCALE: "en"
  APP_FALLBACK_LOCALE: "en"
  LOG_CHANNEL: "stack"
  DB_CONNECTION: "sqlite"
  SESSION_DRIVER: "database"
  CACHE_STORE: "database"

---
# Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ns
  name: app-deployment
  labels:
    app: laravel-app
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: laravel-app
  template:
    metadata:
      labels:
        app: laravel-app
    spec:
      containers:
        - name: laravel-app
          image: k8s-ramadan:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
              name: app-port
          env:
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: laravel-config
                  key: APP_NAME
            - name: APP_ENV
              valueFrom:
                configMapKeyRef:
                  name: laravel-config
                  key: APP_ENV
            - name: APP_KEY
              valueFrom:
                configMapKeyRef:
                  name: laravel-config
                  key: APP_KEY
            - name: APP_DEBUG
              valueFrom:
                configMapKeyRef:
                  name: laravel-config
                  key: APP_DEBUG
            - name: APP_URL
              valueFrom:
                configMapKeyRef:
                  name: laravel-config
                  key: APP_URL
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "200m"
              memory: "256Mi"

---
# NGINX Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ns
  name: nginx-deployment
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
       app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: public-volume
              mountPath: /var/www/html/public
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: public-volume
          emptyDir: {}

---
# ConfigMap for NGINX configuration
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ns
  name: nginx-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name my-app.local;
        root /var/www/html/public;
        
        index index.php;
        
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        location ~ \.php$ {
            fastcgi_pass app-service:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
    }

---
# Service for Laravel application
apiVersion: v1
kind: Service
metadata:
  namespace: ns
  name: app-service
  labels:
    app: laravel-app
spec:
  type: ClusterIP
  selector:
    app: laravel-app
  ports:
    - port: 9000
      targetPort: app-port

---
# Service for NGINX
apiVersion: v1
kind: Service
metadata:
  namespace: ns
  name: nginx-service
  labels:
    app: nginx
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: http
      nodePort: 30000

---
# Ingress resource
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: ns
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: my-app.local
      http: 
        paths: 
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80




    