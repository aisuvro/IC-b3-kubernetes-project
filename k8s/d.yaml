apiVersion: v1
kind: Namespace
metadata:
  name: ns
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   namespace: ns
#   name: nsapp
#   labels:
#     app: nsapp
# spec:
#   containers:
#     - name: ns-nginx-cont
#       image: nginx
#       env:
#         - name: APP_DEBUG
#           value: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ns
  name: nsdeployment
spec:
  replicas: 4
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: nsapp
  template:
    metadata:
      labels:
       app: nsapp
    spec:
      containers:
        - name: ns-nginx-cont
          image: nginx
          ports:
            - containerPort: 80
              name: http
          env:
            - name: APP_DEBUG
              value: "true"
---
apiVersion: v1
kind: Service
metadata:
  namespace: ns
  name: nsnginx
  labels:
    app: nsapp
spec:
  type: NodePort
  selector:
    app: nsapp
  ports:
    - port: 8095
      targetPort: http
      nodePort: 30000
---
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
# kubectl get pods -n ingress-nginx
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ns-ingress
  namespace: ns
  annotations:
    # simple ingress
spec:
  ingressClassName: nginx
  rules:
    - host: my-app.local
      http: 
        paths: 
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: nsnginx
                port:
                  number: 8095




    